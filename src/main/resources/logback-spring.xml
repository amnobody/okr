<configuration scan="false" scanPeriod="5 seconds" debug="true">

    <!-- 定义全局参数常量 -->
    <property name="log.level" value="info"/>
    <!-- 30表示30个 -->
    <property name="log.maxHistory" value="30"/>
    <!-- 日志的存放位置 catalina.base表示tomcat的根路径-->
    <property name="log.filePath" value="${catalina.base}/"/>
    <!-- 日志的展现格式 -->
    <property name="log.pattern" value="%X{traceId}_%X{username}_%X{requestIp}-[%date{ISO8601}]-[%-5level]-[%thread]-[%logger] - %msg%n"/>

    <!-- 定义appender (日志的输出和存放位置等). -->
    <!-- 控制台设置 -->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${log.pattern}</pattern>  <!-- 控制台日志输出格式 -->
        </encoder>
    </appender>

    <!-- INFO -->
    <appender name="infoOut" class="ch.qos.logback.core.rolling.RollingFileAppender"><!-- 日志文件会滚动 -->
        <!-- 文件路径 当前的日志文件存放路径-->
        <file>${log.filePath}/info.log</file>
        <!-- 日志滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 历史日志文件的存放路径和名称 -->
            <fileNamePattern>${log.filePath}/info/info.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
            <!-- 日志文件最大的保存历史 数量-->
            <maxHistory>${log.maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>  <!-- 日志文件中日志的格式 -->
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>  <!-- 用过滤器，只接受INFO级别的日志信息，其余全部过滤掉 -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- ERROR-->
    <appender name="errorOut" class="ch.qos.logback.core.rolling.RollingFileAppender"><!-- 日志文件会滚动 -->
        <!-- 文件路径 -->
        <file>${log.filePath}/error.log</file><!-- 当前的日志文件存放路径 -->
        <!-- 日志滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> <!-- TimeBased默认是一天更新一次 -->
            <!-- 历史日志文件的存放路径和名称 -->
            <fileNamePattern>${log.filePath}/error/error.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
            <!-- 日志文件最大的保存历史 数量-->
            <maxHistory>${log.maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>  <!-- 日志文件中日志的格式 -->
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>  <!-- 用过滤器，只接受ERROR级别的日志信息，其余全部过滤掉 -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- logger标签用于和appender进行绑定，并告诉logback哪些包（name属性）的日志信息需要记录 -->
    <!--logger将会继承root标签，在加上additivity="true"的属性后 root标签中的level将会被logger的level覆盖-->
    <logger name="com.test" level="${log.level}" additivity="true">
        <!-- level表示只记录哪一个级别以上的日志 -->
        <!-- 与appender进行绑定 -->
        <appender-ref ref="infoOut"/>
        <appender-ref ref="errorOut"/>
    </logger>

    <root level="INFO">
        <appender-ref ref="stdout"/>
    </root>
</configuration>
